version: '3.9'

services:
#   go_api_cont:
#     build: ./gorestapi/docker/
#     container_name: go_api_cont
#     ports:
#       - 8088:8088
#     restart: always
#     environment:
#       - POSTGRES_USER=POSTGRES_USER
#       - POSTGRES_PASSWORD=POSTGRES_PASSWORD
#       - POSTGRES_DATABASE=POSTGRES_DATABASE
#       - POSTGRES_PORT=POSTGRES_PORT
#       - POSTGRES_HOST=POSTGRES_HOST
#         # TODO - Add env variables to this GO container
#         # - REDIS_HOST=redis
#         # - REDIS_PORT=6379
#         # - RABBITMQ_HOST=rabbitmq
#         # - RABBITMQ_PORT=5672
#         # - ELASTICSEARCH_HOST=elasticsearch
#         # - ELASTICSEARCH_PORT=9200
#         # - MONGO_HOST=mongodb
#         # - MONGO_PORT=27017
#         # - PROMETHEUS_HOST=prometheus
#     networks:
#         - go_rest_api_project

  postgres_db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
    ports:
      - "5432:5432"
    mem_reservation: 2g
    mem_limit: 3g
    cpu_shares: 1024
    cpus: 2
    volumes:
      - ./volumes/postgres_data:/var/lib/postgresql/data
    networks:
      - go_rest_api_project


networks:
  go_rest_api_project:
    driver: bridge


### TODO - add and test other services
#   redis:
#     image: redis:latest
#     container_name: redis_cont
#     restart: always
#     ports:
#       - "6379:6379"
#     networks:
#       - go_rest_api_project

#   rabbitmq:
#     image: rabbitmq:management
#     container_name: rabbitmq_cont
#     restart: always
#     ports:
#       - "5672:5672"
#       - "15672:15672"
#     networks:
#       - go_rest_api_project

#   elasticsearch:
#     image: elasticsearch:7.17.0
#     container_name: elasticsearch_cont
#     environment:
#       - discovery.type=single-node
#     ports:
#       - "9200:9200"
#       - "9300:9300"
#     networks:
#       - go_rest_api_project

#   mongodb:
#     image: mongo:latest
#     container_name: mongodb_cont
#     restart: always
#     ports:
#       - "27017:27017"
#     networks:
#       - go_rest_api_project

#   prometheus:
#     image: prom/prometheus
#     container_name: prometheus_cont
#     volumes:
#       - ./prometheus.yml:/etc/prometheus/prometheus.yml
#     ports:
#       - "9090:9090"
#     networks:
#       - go_rest_api_project

#   grafana:
#     image: grafana/grafana
#     container_name: grafana_cont
#     ports:
#       - "3000:3000"
#     depends_on:
#       - prometheus
#     networks:
#       - go_rest_api_project